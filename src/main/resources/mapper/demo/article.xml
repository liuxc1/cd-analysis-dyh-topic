<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ths.project.mapper.ArticleMapper">
    <select id="list" parameterType="java.util.Map" resultType="java.util.Map">
        <!--// databaseId="oracle" 根据不同的数据库类型，myBatis自动寻找对应数据库类型的SQL，
                如果不写databaseId，则不会按照数据库类型匹配；
                databaseId的可选值有：sqlserver/db2/oracle/mysql  //-->
        SELECT * FROM DEMO_ARTICLE_CONTENT DAT
        WHERE 1=1
        <if test='ARTICLE_CONTENT != null and ARTICLE_CONTENT != ""'>
            <bind name="ARTICLE_CONTENT" value="'%' + ARTICLE_CONTENT + '%'"/>
            AND (DAT.ARTICLE_TITLE LIKE #{ARTICLE_CONTENT,jdbcType=VARCHAR} or DAT.ARTICLE_CONTENT LIKE #{ARTICLE_CONTENT,jdbcType=VARCHAR}
        </if>
        <if test='ARTICLE_TYPEID != null and ARTICLE_TYPEID != ""'>
            <bind name="ARTICLE_TYPEID" value="'%' + ARTICLE_TYPEID + '%'"/>
            AND DAT.ARTICLE_TYPEID LIKE #{ARTICLE_TYPEID,jdbcType=VARCHAR}
        </if>
        <if test='ARTICLE_STATUSID != null and ARTICLE_STATUSID != ""'>
            <bind name="ARTICLE_STATUSID" value="'%' + ARTICLE_STATUSID + '%'"/>
            AND DAT.ARTICLE_STATUSID LIKE #{ARTICLE_STATUSID,jdbcType=VARCHAR}
        </if>
    </select>

    <select id="get" parameterType="java.lang.String" resultType="java.util.Map">
        SELECT *
        FROM DEMO_ARTICLE_CONTENT DAC
        WHERE DAC.ARTICLE_ID = #{ARTICLE_ID, jdbcType=VARCHAR}
    </select>

    <insert id="insert" parameterType="java.util.Map">
        INSERT INTO DEMO_ARTICLE_CONTENT
        (ARTICLE_ID,
         ARTICLE_TITLE,
         ARTICLE_CONTENT,
         ARTICLE_TYPEID,
         ARTICLE_TYPE,
         ARTICLE_STATUSID,
         ARTICLE_STATUS,
         CREATE_USERID,
         CREATE_USERNAME,
         CREATE_TIME,
         PROPOSER_USERID,
         PROPOSER_USERNAME,
         HANDLE_USERID,
         HANDLE_USERNAME,
         HANDLE_TIME)
        VALUES (#{ARTICLE_ID,jdbcType=VARCHAR},
                #{ARTICLE_TITLE,jdbcType=VARCHAR},
                #{ARTICLE_CONTENT,jdbcType=VARCHAR},
                #{ARTICLE_TYPEID,jdbcType=VARCHAR},
                #{ARTICLE_TYPE,jdbcType=VARCHAR},
                #{ARTICLE_STATUSID,jdbcType=VARCHAR},
                #{ARTICLE_STATUS,jdbcType=VARCHAR},
                #{CREATE_USERID,jdbcType=VARCHAR},
                #{CREATE_USERNAME,jdbcType=VARCHAR},
                TO_DATE(#{CREATE_TIME,jdbcType=TIMESTAMP }, 'YYYY-MM-DD HH24:MI:SS'),
                #{PROPOSER_USERID,jdbcType=VARCHAR},
                #{PROPOSER_USERNAME,jdbcType=VARCHAR},
                #{HANDLE_USERID,jdbcType=VARCHAR},
                #{HANDLE_USERNAME,jdbcType=VARCHAR},
                TO_DATE(#{HANDLE_TIME,jdbcType=TIMESTAMP }, 'YYYY-MM-DD HH24:MI:SS'))
    </insert>

    <delete id="delete">
        DELETE FROM DEMO_ARTICLE_CONTENT WHERE ARTICLE_ID IN
        <!-- 如果是数组，collection="array",如果是List，collection="list" -->
        <foreach collection="array" item="ARTICLE_ID" index="index" open="(" separator="," close=")">
            #{ARTICLE_ID,jdbcType=VARCHAR}
        </foreach>
    </delete>

    <delete id="deleteOne">
        DELETE
        FROM DEMO_ARTICLE_CONTENT
        WHERE ARTICLE_ID = #{ARTICLE_ID, jdbcType=VARCHAR}
    </delete>

    <update id="update" parameterType="java.util.Map">
        UPDATE DEMO_ARTICLE_CONTENT
        SET ARTICLE_ID        = #{ARTICLE_ID,jdbcType=VARCHAR},
            ARTICLE_TITLE     = #{ARTICLE_TITLE,jdbcType=VARCHAR},
            ARTICLE_CONTENT   = #{ARTICLE_CONTENT,jdbcType=VARCHAR},
            ARTICLE_TYPEID    = #{ARTICLE_TYPEID,jdbcType=VARCHAR},
            ARTICLE_TYPE      = #{ARTICLE_TYPE,jdbcType=VARCHAR},
            ARTICLE_STATUSID  = #{ARTICLE_STATUSID,jdbcType=VARCHAR},
            ARTICLE_STATUS    = #{ARTICLE_STATUS,jdbcType=VARCHAR},
            CREATE_USERID     = #{CREATE_USERID,jdbcType=VARCHAR},
            CREATE_USERNAME   = #{CREATE_USERNAME,jdbcType=VARCHAR},
            CREATE_TIME       = #{CREATE_TIME,jdbcType=TIMESTAMP},
            HANDLE_USERID     = #{HANDLE_USERID,jdbcType=VARCHAR},
            HANDLE_USERNAME   = #{HANDLE_USERNAME,jdbcType=VARCHAR},
            HANDLE_TIME       = #{HANDLE_TIME,jdbcType=TIMESTAMP},
            PROPOSER_USERID   = #{PROPOSER_USERID,jdbcType=VARCHAR},
            PROPOSER_USERNAME = #{PROPOSER_USERNAME,jdbcType=VARCHAR}
        WHERE ARTICLE_ID = #{ARTICLE_ID,jdbcType=VARCHAR}
    </update>

</mapper>

