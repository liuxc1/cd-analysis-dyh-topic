<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 空气质量现状 -->
<mapper namespace="ths.project.analysis.forecastcaselibrary.service.ForecastCaseLibraryMapper">
    <select id="queryDictionaryListByCode" resultType="map">
        SELECT DICTIONARY_ID,
               DICTIONARY_CODE,
               DICTIONARY_NAME
        FROM JDP_EFORM_DICTIONARY
        WHERE DICTIONARY_TREE_ID = (SELECT TREE_ID FROM JDP_EFORM_DICTIONARYTREE WHERE TREE_CODE = #{treeCode})
        ORDER BY DICTIONARY_SORT
    </select>
    <select id="queryCastList" resultType="map">
        SELECT
        PK_ID,CONVERT(varchar(10),W_START_TIME,120)W_START_TIME,CONVERT(varchar(10),W_END_TIME,120)W_END_TIME,WEATHER_TYPE_NAME,
        POLLUTE_NAME,MAX_O3,MAX_PM25,AVG_PM25,AVG_PM10,AVG_SO2,AVG_NO2,AVG_CO,AVG_O3,ANALYSIS_CONCLUSION,FORECAST_REF,POLLUTE_NUM,
        TEMPERATURE,
        PRECIPITATION,
        WIND_SPEED,
        WIND_FREQUENCY,
        WATER_ANALYSIS
        FROM T_ANS_FORECAST_CASE A
        <where>
            <if test="startTime!=null and startTime!=''">
                AND A.W_START_TIME>=CONVERT(datetime,#{startTime})
            </if>
            <if test="endTime!=null and endTime!=''">
                AND <![CDATA[A.W_START_TIME<=CONVERT(datetime,#{endTime})]]>
            </if>
            <if test="weatherCodes!=null and weatherCodes!=''">
                AND
                <foreach collection="weatherArray" separator=" or" open="(" close=")" item="code">
                    WEATHER_TYPE_CODE LIKE CONCAT('%',#{code},'%')
                </foreach>
            </if>
            <if test="polluteCodes!=null and polluteCodes!=''">
                AND
                <foreach collection="polluteArray" separator=" or" open="(" close=")" item="code">
                    POLLUTE_CODE LIKE CONCAT('%',#{code},'%')
                </foreach>
            </if>
            <if test="id!=null and id!=''">
                AND PK_ID = #{id}
            </if>
        </where>
        ORDER BY W_START_TIME DESC
    </select>

    <select id="queryCalculationDataList" resultType="map">
        <![CDATA[
        WITH A AS (
            SELECT A.*,
                   CASE WHEN WIND_COUNT_NUM !=0  THEN ROUND(JF_NUM / WIND_COUNT_NUM * 100, 2) ELSE NULL END PL
            FROM (
                     SELECT SUM(CASE WHEN AQI > 100 THEN 1 ELSE 0 END)         POLLUTE_NUM,
                            COUNT(WIND_SPEED)                                  WIND_COUNT_NUM,
                            MAX(O3)                                            MAX_O3,
                            MAX(PM25)                                          MAX_PM25,
                            SUM(CASE WHEN WIND_SPEED <= 0.2 THEN 1 ELSE 0 END) JF_NUM
                     FROM T_ANS_FORECAST_CASE_DETAILS_DAY
                     WHERE MONITOR_TIME >= CONVERT(datetime, #{startTime})
                       AND MONITOR_TIME <= CONVERT(datetime, #{endTime} )
                 ) A),
             B AS (
                 SELECT AVG(PM25)                  AVG_PM25,
                        AVG(PM10)                  AVG_PM10,
                        AVG(SO2)                   AVG_SO2,
                        AVG(NO2)                   AVG_NO2,
                        ROUND(AVG(CO), 1)          AVG_CO,
                        AVG(O3)                    AVG_O3,
                        ROUND(AVG(TEMPERATURE), 1) AVG_TEMPERATURE,
                        ROUND(AVG(RAINFALL), 1)    AVG_RAINFALL,
                        ROUND(AVG(WIND_SPEED), 1)  AVG_WIND_SPEED
                 FROM T_ANS_FORECAST_CASE_DETAILS_HOUR
                 WHERE MONITOR_TIME >= CONVERT(datetime , #{startTime})
                   AND MONITOR_TIME <= CONVERT(datetime , #{endTime})
             )
        select * from A,B
        ]]>
    </select>

    <insert id="save">
        <![CDATA[
        INSERT INTO T_ANS_FORECAST_CASE (PK_ID,
                                         W_START_TIME,
                                         W_END_TIME,
                                         POLLUTE_NUM,
                                         WEATHER_TYPE_CODE,
                                         WEATHER_TYPE_NAME,
                                         POLLUTE_CODE,
                                         POLLUTE_NAME,
                                         MAX_O3,
                                         MAX_PM25,
                                         AVG_PM25,
                                         AVG_PM10,
                                         AVG_SO2,
                                         AVG_NO2,
                                         AVG_CO,
                                         AVG_O3,
                                         TEMPERATURE,
                                         PRECIPITATION,
                                         WIND_SPEED,
                                         WIND_FREQUENCY,
                                         CREATE_TIME,
                                         CREATE_USER,
                                         UPDATE_TIME,
                                         UPDATE_USER)
        SELECT REPLACE(newid(), '-', '')               PK_ID,
               #{startTime}                            W_START_TIME,
               #{endTime}                              W_END_TIME,
               A.POLLUTE_NUM,
               #{weatherCode}                          WEATHER_TYPE_CODE,
               #{weatherName}                          WEATHER_TYPE_NAME,
               #{polluteCode}                          POLLUTE_CODE,
               #{polluteName}                          POLLUTE_NAME,
               A.MAX_O3,
               A.MAX_PM25,
               A.AVG_PM25,
               A.AVG_PM10,
               A.AVG_SO2,
               A.AVG_NO2,
               A.AVG_CO,
               A.AVG_O3,
               A.AVG_TEMPERATURE                       TEMPERATURE,
               A.AVG_RAINFALL                          PRECIPITATION,
               A.AVG_WIND_SPEED                        WIND_SPEED,
               CASE WHEN WIND_COUNT_NUM !=0 THEN ROUND(JF_NUM / WIND_COUNT_NUM * 100, 2) ELSE NULL END WIND_FREQUENCY,
               GETDATE()                               REATE_TIME,
               #{userName}                             CREATE_USER,
               GETDATE()                               UPDATE_TIME,
               #{userName}                             UPDATE_USER
        FROM (
                 SELECT SUM(CASE WHEN AQI > 100 THEN 1 ELSE 0 END)         POLLUTE_NUM,
                        COUNT(WIND_SPEED)                                  WIND_COUNT_NUM,
                        MAX(O3)                                            MAX_O3,
                        MAX(PM25)                                          MAX_PM25,
                        AVG(PM25)                                          AVG_PM25,
                        AVG(PM10)                                          AVG_PM10,
                        AVG(SO2)                                           AVG_SO2,
                        AVG(NO2)                                           AVG_NO2,
                        ROUND(AVG(CO), 1)                                  AVG_CO,
                        AVG(O3)                                            AVG_O3,
                        ROUND(AVG(TEMPERATURE), 1)                         AVG_TEMPERATURE,
                        ROUND(AVG(RAINFALL), 1)                            AVG_RAINFALL,
                        ROUND(AVG(WIND_SPEED), 1)                          AVG_WIND_SPEED,
                        SUM(CASE WHEN WIND_SPEED <= 0.2 THEN 1 ELSE 0 END) JF_NUM
                 FROM T_ANS_FORECAST_CASE_DETAILS_DAY
                 WHERE MONITOR_TIME >= CONVERT(datetime, #{startTime})
                   AND MONITOR_TIME <= CONVERT(datetime, #{endTime})
             ) A
        ]]>
    </insert>

    <delete id="delete">
        DELETE
        FROM T_ANS_FORECAST_CASE
        WHERE PK_ID = #{id}
    </delete>

    <select id="queryPollutionAnalysisCharts" resultType="map">
        <if test="dateType=='hour'">
            SELECT
                CONVERT(varchar (16), MONITOR_TIME, 120) MONITORTIME,
                *
            FROM
                T_ANS_FORECAST_CASE_DETAILS_HOUR
        </if>
		<if test="dateType=='day'">
            SELECT
                CONVERT(varchar (10), MONITOR_TIME, 23) MONITORTIME,
                *
            FROM
                T_ANS_FORECAST_CASE_DETAILS_DAY
        </if>
        <![CDATA[
        WHERE MONITOR_TIME >= CONVERT(DATETIME, #{startTime})
          AND MONITOR_TIME <= CONVERT(DATETIME, #{endTime})
        ORDER BY MONITORTIME ASC
        ]]>
    </select>

    <select id="querywaterList" resultType="map">
        SELECT CONVERT(varchar(10),MONITOR_TIME,120) MONITORTIME,* FROM T_ANS_FORECAST_CASE_DETAILS_DAY
        <where>
            <if test="startTime!=null and startTime!=''">
                MONITOR_TIME &gt;=CONVERT(DATETIME,#{startTime})
            </if>
            <if test="endTime!=null and endTime!=''">
                AND MONITOR_TIME &lt;=CONVERT(DATETIME,#{endTime})
            </if>
        </where>
        ORDER BY MONITORTIME ASC
    </select>

    <select id="queryPollutionAnalysisText" resultType="map">
        <![CDATA[
        SELECT SUM(CASE WHEN AQI > 100 THEN 1 ELSE 0 END)                POLLUTE_NUM,
               MAX(ZF_PM25)                                              ZF_PM25,
               MAX(ZF_O3)                                                ZF_O3,
               MAX(PM25)                                                 MAX_PM25,
               MAX(O3)                                                   MAX_O3,
               SUM(CASE WHEN AQI > 100 AND AQI <= 150 THEN 1 ELSE 0 END) QDWR,
               SUM(CASE WHEN AQI > 150 AND AQI <= 200 THEN 1 ELSE 0 END) ZDWR,
               SUM(CASE WHEN AQI > 200 AND AQI <= 300 THEN 1 ELSE 0 END) ZZDWR,
               SUM(CASE WHEN AQI > 300 THEN 1 ELSE 0 END)                YZWR
        FROM (
                 SELECT A.MONITORTIME, B.PM25 - A.PM25 ZF_PM25, B.O3 - A.O3 ZF_O3, A.PM25, A.O3, A.AQI
                 FROM (
                          SELECT MONITOR_TIME MONITORTIME,
                                 PM25,
                                 PM10,
                                 SO2,
                                 NO2,
                                 CO,
                                 O3,
                                 AQI
                          FROM T_ANS_FORECAST_CASE_DETAILS_HOUR
                          WHERE MONITOR_TIME >= CONVERT(DATETIME, #{startTime})
                            AND MONITOR_TIME <= CONVERT(DATETIME, #{endTime})
                      ) A
                          LEFT JOIN (
                     SELECT MONITOR_TIME MONITORTIME, PM25, PM10, SO2, NO2, CO, O3
                     FROM T_ANS_FORECAST_CASE_DETAILS_HOUR
                     WHERE MONITOR_TIME >= CONVERT(DATETIME, #{startTime})
                       AND MONITOR_TIME <= CONVERT(DATETIME, #{endTime})
                 ) B ON A.MONITORTIME = DATEADD(DAY,-1, B.MONITORTIME)
             ) A
        ]]>
    </select>
    <update id="updatePollutionAnalysisText">
        UPDATE T_ANS_FORECAST_CASE
        SET ANALYSIS_CONCLUSION = #{text}
        WHERE PK_ID = #{id}
    </update>

    <update id="updateForcastRef">
        UPDATE T_ANS_FORECAST_CASE
        SET FORECAST_REF = #{forcastRef}
        WHERE PK_ID = #{id}
    </update>

    <update id="updateWaterAnalysis">
        UPDATE T_ANS_FORECAST_CASE
        SET WATER_ANALYSIS = #{waterAnalysisText}
        WHERE PK_ID = #{id}
    </update>
</mapper>

