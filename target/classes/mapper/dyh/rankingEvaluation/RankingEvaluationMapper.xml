<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ths.project.api.rankingEvaluation.mapper.RankingEvaluationMapper">
    <select id="queryRankingEvaluation" parameterType="map"
            resultType="ths.project.api.rankingEvaluation.entity.RankingEvaluation">
       SELECT
	A.REGIONNAME,
	ROUND(
		cd_dyh_zhdn.DIM_TCODE.GET_AQMI ( 22, A.SO2, A.PM10, A.NO2, A.PM25, B.O3, B.CO ),
		2,
		0
	) COMPOSITEINDEX,
	RANK ( ) OVER (

	ORDER BY
		(
			ROUND(
				cd_dyh_zhdn.DIM_TCODE.GET_AQMI ( 22, A.OLDSO2, A.OLDPM10, A.OLDNO2, A.OLDPM25, B.OLDO3, B.OLDCO ),
				2,
				0
			)
		)
	)
	-
	RANK ( ) OVER (

	ORDER BY
		(
			ROUND(
				cd_dyh_zhdn.DIM_TCODE.GET_AQMI ( 22, A.SO2, A.PM10, A.NO2, A.PM25, B.O3, B.CO ),
				2,
				0
			)
		)
		)  COMPOSITEINDEXL,
	PM25,
	RANK ( ) OVER ( ORDER BY A.OLDPM25 DESC ) - RANK ( ) OVER ( ORDER BY A.PM25 DESC )  PM25L,
	PM10,
	RANK ( ) OVER ( ORDER BY A.OLDPM10 DESC ) - RANK ( ) OVER ( ORDER BY A.PM10 DESC )   PM10L,
	SO2,
	RANK ( ) OVER ( ORDER BY A.OLDSO2 DESC ) - RANK ( ) OVER ( ORDER BY A.SO2 DESC )  SO2L,
	NO2,
	RANK ( ) OVER ( ORDER BY A.OLDNO2 DESC ) - RANK ( ) OVER ( ORDER BY A.NO2 DESC )  NO2L,
	CAST(O3 AS DECIMAL ) AS O3,
	RANK ( ) OVER ( ORDER BY B.OLDO3 DESC ) - RANK ( ) OVER ( ORDER BY B.O3 DESC )  O3L,
	CAST(CO AS DECIMAL ) AS CO,
	RANK ( ) OVER ( ORDER BY B.OLDCO DESC ) - RANK ( ) OVER ( ORDER BY B.CO DESC )  COL
FROM
	(
	SELECT
		A.AREA_NAME AS REGIONNAME,
		ROUND( AVG ( C.PM25 ), 0, 0 ) AS PM25,
		ROUND( AVG ( D.PM25 ), 0, 0 ) AS OLDPM25,
		ROUND( AVG ( C.PM10 ), 0, 0 ) AS PM10,
		ROUND( AVG ( D.PM10 ), 0, 0 ) AS OLDPM10,
		ROUND( AVG ( C.SO2 ), 0, 0 ) AS SO2,
		ROUND( AVG ( D.SO2 ), 0, 0 ) AS OLDSO2,
		ROUND( AVG ( C.NO2 ), 0, 0 ) AS NO2,
		ROUND( AVG ( D.NO2 ), 0, 0 ) AS OLDNO2
	FROM
		( SELECT AREA_NAME, AREA_CODE FROM cd_dyh_zhdn.DIM_TCODE.T_ALL_AREA WHERE TYPE = 'ZD' ) A
		INNER JOIN cd_dyh_zhdn.DIM_TCODE.T_ALL_CITY_AREA B ON A.AREA_CODE = B.AREA_CODE
		LEFT JOIN (
		SELECT
			REGION_CODE,
			PM25,
			PM10,
			SO2,
			NO2
		FROM
			cd_dyh_zhdn.DW_AIR.T_ENV_AUTOMONI_ACCMONTH_DAY
		WHERE
			DATE_TYPE = #{QUERYTYPE}
			AND MONITORTIME = ( SELECT MAX ( MONITORTIME ) FROM cd_dyh_zhdn.DW_AIR.T_ENV_AUTOMONI_ACCMONTH_DAY WHERE DATE_TYPE = 'CUR_QUARTERLY' )
			AND REGION_CODE != '510100000000' UNION ALL
		SELECT
			REGION_CODE,
			PM25,
			PM10,
			SO2,
			NO2
		FROM
			cd_dyh_zhdn.DW_AIR.T_ENV_AUTOMONI_ACCMONTH_DAY
		WHERE
			DATE_TYPE = #{QUERYTYPE}
			AND MONITORTIME = ( SELECT MAX ( MONITORTIME ) FROM cd_dyh_zhdn.DW_AIR.T_ENV_AUTOMONI_ACCMONTH_DAY WHERE DATE_TYPE = 'CUR_QUARTERLY' )
			AND POINT_CODE = '510100000000'
		) C ON B.CITY_CODE = C.REGION_CODE
		INNER JOIN (
		SELECT
			REGION_CODE,
			PM25,
			PM10,
			SO2,
			NO2
		FROM
			cd_dyh_zhdn.DW_AIR.T_ENV_AUTOMONI_ACCMONTH_DAY
		WHERE
			DATE_TYPE = #{QUERYTYPE}
			AND MONITORTIME = ( SELECT DATEADD( YY, - 1, MAX ( MONITORTIME ) ) FROM cd_dyh_zhdn.DW_AIR.T_ENV_AUTOMONI_ACCMONTH_DAY WHERE DATE_TYPE = 'CUR_QUARTERLY' )
			AND REGION_CODE != '510100000000' UNION ALL
		SELECT
			REGION_CODE,
			PM25,
			PM10,
			SO2,
			NO2
		FROM
			cd_dyh_zhdn.DW_AIR.T_ENV_AUTOMONI_ACCMONTH_DAY
		WHERE
			DATE_TYPE = #{QUERYTYPE}
			AND MONITORTIME = ( SELECT DATEADD( YY, - 1, MAX ( MONITORTIME ) ) FROM cd_dyh_zhdn.DW_AIR.T_ENV_AUTOMONI_ACCMONTH_DAY WHERE DATE_TYPE = 'CUR_QUARTERLY' )
			AND POINT_CODE = '510100000000'
		) D ON C.REGION_CODE = D.REGION_CODE
	GROUP BY
		A.AREA_NAME
	) A
	INNER JOIN (
	SELECT DISTINCT
		A.AREA_NAME AS REGIONNAME,
		PERCENTILE_CONT ( 0.9 ) WITHIN GROUP ( ORDER BY C.O3_8 ) OVER ( PARTITION BY A.AREA_NAME ) AS O3,
		PERCENTILE_CONT ( 0.9 ) WITHIN GROUP ( ORDER BY D.O3_8 ) OVER ( PARTITION BY A.AREA_NAME ) AS OLDO3,
		PERCENTILE_CONT ( 0.95 ) WITHIN GROUP ( ORDER BY C.CO ) OVER ( PARTITION BY A.AREA_NAME ) AS CO,
		PERCENTILE_CONT ( 0.95 ) WITHIN GROUP ( ORDER BY D.CO ) OVER ( PARTITION BY A.AREA_NAME ) AS OLDCO
	FROM
		( SELECT AREA_NAME, AREA_CODE FROM cd_dyh_zhdn.DIM_TCODE.T_ALL_AREA WHERE TYPE = 'ZD' ) A
		INNER JOIN cd_dyh_zhdn.DIM_TCODE.T_ALL_CITY_AREA B ON A.AREA_CODE = B.AREA_CODE
		LEFT JOIN (
		SELECT
			REGION_CODE,
			O3_8,
			CO
		FROM
			cd_dyh_zhdn.DW_AIR.T_ENV_AUTOMONI_ACCMONTH_DAY
		WHERE
			DATE_TYPE = #{QUERYTYPE}
			AND MONITORTIME = ( SELECT MAX ( MONITORTIME ) FROM cd_dyh_zhdn.DW_AIR.T_ENV_AUTOMONI_ACCMONTH_DAY WHERE DATE_TYPE = 'CUR_QUARTERLY' )
			AND REGION_CODE != '510100000000' UNION ALL
		SELECT
			REGION_CODE,
			O3_8,
			CO
		FROM
			cd_dyh_zhdn.DW_AIR.T_ENV_AUTOMONI_ACCMONTH_DAY
		WHERE
			DATE_TYPE = #{QUERYTYPE}
			AND MONITORTIME = ( SELECT MAX ( MONITORTIME ) FROM cd_dyh_zhdn.DW_AIR.T_ENV_AUTOMONI_ACCMONTH_DAY WHERE DATE_TYPE = 'CUR_QUARTERLY' )
			AND POINT_CODE = '510100000000'
		) C ON B.CITY_CODE = C.REGION_CODE
		INNER JOIN (
		SELECT
			REGION_CODE,
			O3_8,
			CO
		FROM
			cd_dyh_zhdn.DW_AIR.T_ENV_AUTOMONI_ACCMONTH_DAY
		WHERE
			DATE_TYPE = #{QUERYTYPE}
			AND MONITORTIME = ( SELECT DATEADD( YY, - 1, MAX ( MONITORTIME ) ) FROM cd_dyh_zhdn.DW_AIR.T_ENV_AUTOMONI_ACCMONTH_DAY WHERE DATE_TYPE = 'CUR_QUARTERLY' )
			AND REGION_CODE != '510100000000' UNION ALL
		SELECT
			REGION_CODE,
			O3_8,
			CO
		FROM
			cd_dyh_zhdn.DW_AIR.T_ENV_AUTOMONI_ACCMONTH_DAY
		WHERE
			DATE_TYPE = #{QUERYTYPE}
			AND MONITORTIME = ( SELECT DATEADD( YY, - 1, MAX ( MONITORTIME ) ) FROM cd_dyh_zhdn.DW_AIR.T_ENV_AUTOMONI_ACCMONTH_DAY WHERE DATE_TYPE = 'CUR_QUARTERLY' )
			AND POINT_CODE = '510100000000'
		) D ON C.REGION_CODE = D.REGION_CODE
	GROUP BY
		A.AREA_NAME,
		C.O3_8,
		D.O3_8,
		C.CO,
	D.CO
	) B ON A.REGIONNAME = B.REGIONNAME
	 ORDER BY COMPOSITEINDEX DESC
    </select>


    <select id="queryDistrictRankingEvaluation" parameterType="map"
            resultType="ths.project.api.rankingEvaluation.entity.RankingEvaluation">
        SELECT
        REGIONNAME,
        ROUND( DataCenter_V6.TENVAIR.GET_AQMI ( 22, SO2, PM10, NO2, PM25, O3, CO ), 2, 0 ) COMPOSITEINDEX,
		RANK ( ) OVER (

		ORDER BY
		ROUND( DataCenter_V6.TENVAIR.GET_AQMI ( 22, OLDSO2, OLDPM10, OLDNO2, OLDPM25, OLDO3, OLDCO ), 2, 0 ) DESC
		)
		-
        RANK ( ) OVER (

        ORDER BY
        ROUND( DataCenter_V6.TENVAIR.GET_AQMI ( 22, SO2, PM10, NO2, PM25, O3, CO ), 2, 0 ) DESC
        )  COMPOSITEINDEXL,
        STR( PM25, 3, 2 ) AS PM25,
		RANK ( ) OVER ( ORDER BY OLDPM25 DESC ) - RANK ( ) OVER ( ORDER BY PM25 DESC )  PM25L,
        STR( PM10, 3, 2 ) AS PM10,
		RANK ( ) OVER ( ORDER BY OLDPM10 DESC ) - RANK ( ) OVER ( ORDER BY PM10 DESC )  PM10L,
        STR( SO2, 3, 2 ) AS SO2,
		RANK ( ) OVER ( ORDER BY OLDSO2 DESC ) - RANK ( ) OVER ( ORDER BY SO2 DESC )  SO2L,
        STR( NO2, 3, 2 ) AS NO2,
		RANK ( ) OVER ( ORDER BY OLDNO2 DESC ) -  RANK ( ) OVER ( ORDER BY NO2 DESC )   NO2L,
        STR( O3, 3, 2 ) AS O3,
		RANK ( ) OVER ( ORDER BY OLDO3 DESC )  -  RANK ( ) OVER ( ORDER BY O3 DESC )  O3L,
        STR( CO, 3, 2 ) AS CO,
		RANK ( ) OVER ( ORDER BY OLDCO DESC ) -  RANK ( ) OVER ( ORDER BY CO DESC )  COL
        FROM
        (
        SELECT
        A.*,
        B.O3,
        B.OLDO3,
        B.CO,
        B.OLDCO
        FROM
        (
        SELECT
        A.REGIONNAME,
        ROUND( AVG ( A.PM2_5 ), 0, 0 ) AS PM25,
        ROUND( AVG ( B.PM2_5 ), 0, 0 ) AS OLDPM25,
        ROUND( AVG ( A.PM10 ), 0, 0 ) AS PM10,
        ROUND( AVG ( B.PM10 ), 0, 0 ) AS OLDPM10,
        ROUND( AVG ( A.SO2 ), 0, 0 ) AS SO2,
        ROUND( AVG ( B.SO2 ), 0, 0 ) AS OLDSO2,
        ROUND( AVG ( A.NO2 ), 0, 0 ) AS NO2,
        ROUND( AVG ( B.NO2 ), 0, 0 ) AS OLDNO2
        FROM
        (
        SELECT
        PM2_5,
        PM10,
        SO2,
        NO2,
        CODE_REGION,
        MONITORTIME,
        REGIONNAME
        FROM
        DataCenter_V6.[TENVAIR].[T_ENV_AIRDATA_REGION_DAY]
        <choose>
            <when test="QUERYTYPE == 'ACC_MONTH'">
                WHERE MONITORTIME >= (
                SELECT CONVERT
                (
                datetime,
                (
                SELECT SUBSTRING
                (
                CONVERT ( VARCHAR ( 100 ), ( SELECT MAX ( MONITORTIME ) FROM cd_dyh_zhdn.DW_AIR.T_ENV_AUTOMONI_DAY ), 20
                ),
                0,
                5
                ) + '-01-01'
                ),
                101
                )
                )
            </when>
            <when test="QUERYTYPE == 'CUR_MONTH'">
                WHERE MONITORTIME >= (
                SELECT CONVERT
                (
                datetime,
                (
                SELECT SUBSTRING
                (
                CONVERT ( VARCHAR ( 100 ), ( SELECT MAX ( MONITORTIME ) FROM cd_dyh_zhdn.DW_AIR.T_ENV_AUTOMONI_DAY ), 20
                ),
                0,
                8
                ) + '-01'
                ),
                101
                )
                )
            </when>
            <when test="QUERYTYPE == 'CUR_QUARTERLY'">
                WHERE MONITORTIME >= (
                SELECT CONVERT
                (
                datetime,
                CONVERT (
                CHAR ( 8 ),
                DATEADD(
                MONTH,
                DATEPART( Quarter, ( SELECT MAX ( MONITORTIME ) FROM cd_dyh_zhdn.DW_AIR.T_ENV_AUTOMONI_DAY ) ) * 3-Month
                ( ( SELECT MAX ( MONITORTIME ) FROM cd_dyh_zhdn.DW_AIR.T_ENV_AUTOMONI_DAY ) ) - 2,
                ( SELECT MAX ( MONITORTIME ) FROM cd_dyh_zhdn.DW_AIR.T_ENV_AUTOMONI_DAY )
                ),
                120
                ) + '1'
                )
                )
            </when>
        </choose>
        ) A
        INNER JOIN DataCenter_V6.[TENVAIR].[T_ENV_AIRDATA_REGION_DAY] B ON A.CODE_REGION = B.CODE_REGION
        AND dateadd( YY,- 1, A.MONITORTIME ) = B.MONITORTIME
        GROUP BY
        A.REGIONNAME
        ) A
        LEFT JOIN (
        SELECT DISTINCT
        A.REGIONNAME,
        PERCENTILE_CONT ( 0.9 ) WITHIN GROUP ( ORDER BY A.O3_8 ) OVER ( PARTITION BY A.REGIONNAME ) AS O3,
        PERCENTILE_CONT ( 0.9 ) WITHIN GROUP ( ORDER BY B.O3_8 ) OVER ( PARTITION BY A.REGIONNAME ) AS OLDO3,
        PERCENTILE_CONT ( 0.95 ) WITHIN GROUP ( ORDER BY A.CO ) OVER ( PARTITION BY A.REGIONNAME ) AS CO,
        PERCENTILE_CONT ( 0.95 ) WITHIN GROUP ( ORDER BY B.CO ) OVER ( PARTITION BY A.REGIONNAME ) AS OLDCO
        FROM
        (
        SELECT
        REGIONNAME,
        O3_8,
        CO,
        CODE_REGION,
        MONITORTIME
        FROM
        DataCenter_V6.[TENVAIR].[T_ENV_AIRDATA_REGION_DAY]
        <choose>
            <when test="QUERYTYPE == 'ACC_MONTH'">
                WHERE MONITORTIME >= (
                SELECT CONVERT
                (
                datetime,
                (
                SELECT SUBSTRING
                (
                CONVERT ( VARCHAR ( 100 ), ( SELECT MAX ( MONITORTIME ) FROM cd_dyh_zhdn.DW_AIR.T_ENV_AUTOMONI_DAY ), 20
                ),
                0,
                5
                ) + '-01-01'
                ),
                101
                )
                )
            </when>
            <when test="QUERYTYPE == 'CUR_MONTH'">
                WHERE MONITORTIME >= (
                SELECT CONVERT
                (
                datetime,
                (
                SELECT SUBSTRING
                (
                CONVERT ( VARCHAR ( 100 ), ( SELECT MAX ( MONITORTIME ) FROM cd_dyh_zhdn.DW_AIR.T_ENV_AUTOMONI_DAY ), 20
                ),
                0,
                8
                ) + '-01'
                ),
                101
                )
                )
            </when>
            <when test="QUERYTYPE == 'CUR_QUARTERLY'">
                WHERE MONITORTIME >= (
                SELECT CONVERT
                (
                datetime,
                CONVERT (
                CHAR ( 8 ),
                DATEADD(
                MONTH,
                DATEPART( Quarter, ( SELECT MAX ( MONITORTIME ) FROM cd_dyh_zhdn.DW_AIR.T_ENV_AUTOMONI_DAY ) ) * 3-Month
                ( ( SELECT MAX ( MONITORTIME ) FROM cd_dyh_zhdn.DW_AIR.T_ENV_AUTOMONI_DAY ) ) - 2,
                ( SELECT MAX ( MONITORTIME ) FROM cd_dyh_zhdn.DW_AIR.T_ENV_AUTOMONI_DAY )
                ),
                120
                ) + '1'
                )
                )
            </when>
        </choose>
        ) A
        INNER JOIN DataCenter_V6.[TENVAIR].[T_ENV_AIRDATA_REGION_DAY] B ON A.CODE_REGION = B.CODE_REGION
        AND dateadd( YY,- 1, A.MONITORTIME ) = B.MONITORTIME
        GROUP BY
        A.REGIONNAME,
        A.O3_8,
        B.O3_8,
        A.CO,
        B.CO
        ) B ON A.REGIONNAME = B.REGIONNAME
        ) T
        WHERE
        REGIONNAME != '成都市'
        ORDER BY COMPOSITEINDEX DESC
    </select>


    <select id="queryRankingEvaluationInCd" parameterType="map"
            resultType="ths.project.api.rankingEvaluation.entity.RankingEvaluation">
    SELECT
	REGIONNAME,
	COMPOSITEINDEXL COMPOSITEINDEX,
	OLDCOMPOSITEINDEXL - COMPOSITEINDEXL AS COMPOSITEINDEXL,
	PM25L PM25,
	OLDPM25L - PM25L AS PM25L,
	PM10L PM10,
	OLDPM10L - PM10L AS PM10L,
	SO2L SO2,
	OLDSO2L - SO2L AS SO2L,
	NO2L NO2,
	OLDNO2L - NO2L AS NO2L,
	O3L O3,
	OLDO3L - O3L AS O3L,
	COL CO,
	OLDCOL - COL AS COL
FROM
	(
	SELECT
		A.AREA_NAME AS REGIONNAME,
		ROUND(
			cd_dyh_zhdn.DIM_TCODE.GET_AQMI ( 22, C.SO2, C.PM10, C.NO2, C.PM25, C.O3_8, C.CO ),
			2,
			0
		) COMPOSITEINDEX,
		RANK ( ) OVER (
			PARTITION BY A.AREA_NAME
		ORDER BY
			ROUND(
				cd_dyh_zhdn.DIM_TCODE.GET_AQMI ( 22, C.SO2, C.PM10, C.NO2, C.PM25, C.O3_8, C.CO ),
				2,
				0
			) ASC
		) AS COMPOSITEINDEXL,
		ROUND(
			cd_dyh_zhdn.DIM_TCODE.GET_AQMI ( 22, D.SO2, D.PM10, D.NO2, D.PM25, D.O3_8, D.CO ),
			2,
			0
		) AS OLDCOMPOSITEINDEX,
		RANK ( ) OVER (
			PARTITION BY A.AREA_NAME
		ORDER BY
			ROUND(
				cd_dyh_zhdn.DIM_TCODE.GET_AQMI ( 22, D.SO2, D.PM10, D.NO2, D.PM25, D.O3_8, D.CO ),
				2,
				0
			) ASC
		) AS OLDCOMPOSITEINDEXL,
		D.REGION_CODE,
		C.PM25 AS PM25,
		RANK ( ) OVER ( PARTITION BY A.AREA_NAME ORDER BY C.PM25 ASC ) AS PM25L,
		D.PM25 OLDPM25,
		RANK ( ) OVER ( PARTITION BY A.AREA_NAME ORDER BY D.PM25 ASC ) AS OLDPM25L,
		C.PM10 PM10,
		RANK ( ) OVER ( PARTITION BY A.AREA_NAME ORDER BY C.PM10 ASC ) AS PM10L,
		D.PM10 OLDPM10,
		RANK ( ) OVER ( PARTITION BY A.AREA_NAME ORDER BY D.PM10 ASC ) AS OLDPM10L,
		C.SO2 SO2,
		RANK ( ) OVER ( PARTITION BY A.AREA_NAME ORDER BY C.SO2 ASC ) AS SO2L,
		D.SO2 OLDSO2,
		RANK ( ) OVER ( PARTITION BY A.AREA_NAME ORDER BY D.SO2 ASC ) AS OLDSO2L,
		C.NO2 NO2,
		RANK ( ) OVER ( PARTITION BY A.AREA_NAME ORDER BY C.NO2 ASC ) AS NO2L,
		D.NO2 OLDNO2,
		RANK ( ) OVER ( PARTITION BY A.AREA_NAME ORDER BY D.NO2 ASC ) AS OLDNO2L,
		C.CO CO,
		RANK ( ) OVER ( PARTITION BY A.AREA_NAME ORDER BY C.CO ASC ) AS COL,
		D.CO OLDCO,
		RANK ( ) OVER ( PARTITION BY A.AREA_NAME ORDER BY D.CO ASC ) AS OLDCOL,
		C.O3_8 O3,
		RANK ( ) OVER ( PARTITION BY A.AREA_NAME ORDER BY C.O3_8 ASC ) AS O3L,
		D.O3_8 OLDO3,
		RANK ( ) OVER ( PARTITION BY A.AREA_NAME ORDER BY D.O3_8 ASC ) AS OLDO3L
	FROM
		( SELECT AREA_NAME, AREA_CODE FROM cd_dyh_zhdn.DIM_TCODE.T_ALL_AREA WHERE TYPE = 'CP' ) A
		INNER JOIN cd_dyh_zhdn.DIM_TCODE.T_ALL_CITY_AREA B ON A.AREA_CODE = B.AREA_CODE
		LEFT JOIN (
		SELECT
			REGION_CODE,
			PM25,
			PM10,
			SO2,
			NO2,
			CO,
			O3_8
		FROM
			cd_dyh_zhdn.DW_AIR.T_ENV_AUTOMONI_ACCMONTH_DAY
		WHERE
			DATE_TYPE = #{QUERYTYPE}
			AND MONITORTIME = ( SELECT MAX ( MONITORTIME ) FROM cd_dyh_zhdn.DW_AIR.T_ENV_AUTOMONI_ACCMONTH_DAY WHERE DATE_TYPE = 'CUR_QUARTERLY' )
			AND REGION_CODE != '510100000000' UNION ALL
		SELECT
			REGION_CODE,
			PM25,
			PM10,
			SO2,
			NO2,
			CO,
			O3_8
		FROM
			cd_dyh_zhdn.DW_AIR.T_ENV_AUTOMONI_ACCMONTH_DAY
		WHERE
			DATE_TYPE = #{QUERYTYPE}
			AND MONITORTIME = ( SELECT MAX ( MONITORTIME ) FROM cd_dyh_zhdn.DW_AIR.T_ENV_AUTOMONI_ACCMONTH_DAY WHERE DATE_TYPE = 'CUR_QUARTERLY' )
			AND POINT_CODE = '510100000000'
		) C ON B.CITY_CODE = C.REGION_CODE
		INNER JOIN (
		SELECT
			REGION_CODE,
			PM25,
			PM10,
			SO2,
			NO2,
			CO,
			O3_8
		FROM
			cd_dyh_zhdn.DW_AIR.T_ENV_AUTOMONI_ACCMONTH_DAY
		WHERE
			DATE_TYPE = #{QUERYTYPE}
			AND MONITORTIME = ( SELECT DATEADD( YY, - 1, MAX ( MONITORTIME ) ) FROM cd_dyh_zhdn.DW_AIR.T_ENV_AUTOMONI_ACCMONTH_DAY WHERE DATE_TYPE = 'CUR_QUARTERLY' )
			AND REGION_CODE != '510100000000' UNION ALL
		SELECT
			REGION_CODE,
			PM25,
			PM10,
			SO2,
			NO2,
			CO,
			O3_8
		FROM
			cd_dyh_zhdn.DW_AIR.T_ENV_AUTOMONI_ACCMONTH_DAY
		WHERE
			DATE_TYPE = #{QUERYTYPE}
			AND MONITORTIME = ( SELECT DATEADD( YY, - 1, MAX ( MONITORTIME ) ) FROM cd_dyh_zhdn.DW_AIR.T_ENV_AUTOMONI_ACCMONTH_DAY WHERE DATE_TYPE = 'CUR_QUARTERLY' )
			AND POINT_CODE = '510100000000'
		) D ON C.REGION_CODE = D.REGION_CODE
	) A
WHERE
	REGION_CODE = '510100000000'
    </select>
</mapper>