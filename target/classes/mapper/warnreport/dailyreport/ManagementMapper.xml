<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ths.project.warnreport.dailyreport.mapper.ManagementMapper">
<!--    按照行政区进行统计-->
    <select id="getDataListForRegion" resultType="java.util.LinkedHashMap">
       SELECT
            [REGION_NAME],
            CASE WHEN SUM(PEOPLE_NUMBER) IS NULL THEN '0' ELSE SUM(PEOPLE_NUMBER) END  [PEOPLE_NUMBER],
            CASE WHEN SUM(INDUSTRIAL_INSPECTION) IS NULL THEN '0' ELSE SUM(INDUSTRIAL_INSPECTION) END   [INDUSTRIAL_INSPECTION],
            CASE WHEN SUM(INDUSTRIAL_ILLEGAL) IS NULL THEN '0' ELSE SUM(INDUSTRIAL_ILLEGAL) END [INDUSTRIAL_ILLEGAL] ,
            CASE WHEN SUM(NON_ROAD_MOVING_MACHINERY_SPOT_CHECK) IS NULL THEN '0' ELSE   SUM(NON_ROAD_MOVING_MACHINERY_SPOT_CHECK)  END  [SITE_INSPECTION],
            CASE WHEN SUM(NON_ROAD_MOVING_MACHINERY_SPOT_CHECK_EXCEEDING) IS NULL THEN '0' ELSE SUM(NON_ROAD_MOVING_MACHINERY_SPOT_CHECK_EXCEEDING)  END  [DEAL_NON_ROAD_MOVING_MACHINERY],
            CASE WHEN SUM(NON_ROAD_MOVING_MACHINERY_SPOT_CHECK) IS NULL THEN '0' ELSE  SUM(NON_ROAD_MOVING_MACHINERY_SPOT_CHECK) END [NON_ROAD_MOVING_MACHINERY_SPOT_CHECK],
            CASE WHEN SUM(NON_ROAD_MOVING_MACHINERY_SPOT_CHECK_EXCEEDING) IS NULL THEN '0' ELSE SUM(NON_ROAD_MOVING_MACHINERY_SPOT_CHECK_EXCEEDING) END [NON_ROAD_MOVING_MACHINERY_SPOT_CHECK_EXCEEDING],
            CASE WHEN SUM(QX) IS NULL THEN '0' ELSE SUM(QX) END [QX] ,
            '0' QQQ,
            CASE WHEN SUM(HEAVY_DIESEL_TRUCK_SPOT_CHECK) IS NULL THEN '0' ELSE SUM(HEAVY_DIESEL_TRUCK_SPOT_CHECK) END  [HEAVY_DIESEL_TRUCK_SPOT_CHECK],
            CASE WHEN SUM(HEAVY_DIESEL_TRUCK_SPOT_CHECK_EXCEEDING) IS NULL THEN '0' ELSE SUM(HEAVY_DIESEL_TRUCK_SPOT_CHECK_EXCEEDING) END [HEAVY_DIESEL_TRUCK_SPOT_CHECK_EXCEEDING]
        FROM
            DataCenter_V6.[DAILY].[T_BAS_MANAGEMENT]
        WHERE
            DATA_TIME = CONVERT(DATETIME,#{dateTime},120)
            AND REGION_NAME != '成都市'
        GROUP BY
            REGION_NAME
    </select>

<!--按照数据类型进行统计（机动车，总队，应急中心）-->
    <select id="getDataListForDataType" resultType="java.util.LinkedHashMap">
         SELECT
            CASE
                WHEN DATA_TYPE = 'ZD'                THEN '总队'
                WHEN DATA_TYPE = 'JDCZX'             THEN '机动车'
                WHEN DATA_TYPE = 'YJZX'              THEN '应急中心'
            END DATA_YPE ,
                       CASE WHEN SUM(PEOPLE_NUMBER) IS NULL THEN '0' ELSE SUM(PEOPLE_NUMBER) END  [PEOPLE_NUMBER],
            CASE WHEN SUM(INDUSTRIAL_INSPECTION) IS NULL THEN '0' ELSE SUM(INDUSTRIAL_INSPECTION) END   [INDUSTRIAL_INSPECTION],
            CASE WHEN SUM(INDUSTRIAL_ILLEGAL) IS NULL THEN '0' ELSE SUM(INDUSTRIAL_ILLEGAL) END [INDUSTRIAL_ILLEGAL] ,
            CASE WHEN SUM(NON_ROAD_MOVING_MACHINERY_SPOT_CHECK) IS NULL THEN '0' ELSE   SUM(NON_ROAD_MOVING_MACHINERY_SPOT_CHECK)  END  [SITE_INSPECTION],
            CASE WHEN SUM(NON_ROAD_MOVING_MACHINERY_SPOT_CHECK_EXCEEDING) IS NULL THEN '0' ELSE SUM(NON_ROAD_MOVING_MACHINERY_SPOT_CHECK_EXCEEDING)  END  [DEAL_NON_ROAD_MOVING_MACHINERY],
            CASE WHEN SUM(NON_ROAD_MOVING_MACHINERY_SPOT_CHECK) IS NULL THEN '0' ELSE  SUM(NON_ROAD_MOVING_MACHINERY_SPOT_CHECK) END [NON_ROAD_MOVING_MACHINERY_SPOT_CHECK],
            CASE WHEN SUM(NON_ROAD_MOVING_MACHINERY_SPOT_CHECK_EXCEEDING) IS NULL THEN '0' ELSE SUM(NON_ROAD_MOVING_MACHINERY_SPOT_CHECK_EXCEEDING) END [NON_ROAD_MOVING_MACHINERY_SPOT_CHECK_EXCEEDING],
            CASE WHEN SUM(QX) IS NULL THEN '0' ELSE SUM(QX) END [QX] ,
            '0' QQQ,
            CASE WHEN SUM(HEAVY_DIESEL_TRUCK_SPOT_CHECK) IS NULL THEN '0' ELSE SUM(HEAVY_DIESEL_TRUCK_SPOT_CHECK) END  [HEAVY_DIESEL_TRUCK_SPOT_CHECK],
            CASE WHEN SUM(HEAVY_DIESEL_TRUCK_SPOT_CHECK_EXCEEDING) IS NULL THEN '0' ELSE SUM(HEAVY_DIESEL_TRUCK_SPOT_CHECK_EXCEEDING) END [HEAVY_DIESEL_TRUCK_SPOT_CHECK_EXCEEDING]
        FROM
            DataCenter_V6.[DAILY].[T_BAS_MANAGEMENT]
        WHERE
            DATA_TIME = CONVERT(DATETIME,#{dateTime},120)
            AND REGION_NAME != '成都市'
        GROUP BY
            DATA_TYPE
    </select>

<!--    查询监测数据-->
    <select id="getAirData" resultType="java.util.Map">
        SELECT A.REPORT_TIME [MONITORTIME], [CODE_REGION], [REGIONNAME], [PM10], [SO2], [NO2], [PM2_5], [O3], [O3_8], [CO], [AQI], [PRIMARYPOLLUTANT], [COLOR], [CODE_AQILEVEL], [AQILEVELNAME], [CODE_AQISTATION], [AQISTATIONNAME] FROM (
                SELECT
                    DATEADD(DAY, V_RESULT,  CONVERT(DATETIME, #{start_time},120)+1) REPORT_TIME
                FROM
                    GENERATE_SERIES(0,DATEDIFF( DAY, CONVERT(DATETIME, #{start_time},120)+1,#{reportTime}), 1)
        )A LEFT JOIN (
            SELECT
                 [MONITORTIME], [CODE_REGION], [REGIONNAME], [PM10], [SO2], [NO2], [PM2_5], [O3], [O3_8], [CO], [AQI], [PRIMARYPOLLUTANT], [IPM10], [ISO2], [INO2], [IPM2_5], [IO3], [IO3_8], [ICO], [COLOR], [CODE_AQILEVEL], [AQILEVELNAME], [CODE_AQISTATION], [AQISTATIONNAME], [UPDATETIME], [CREATE_USER], [UPDATE_USER], [CREATE_TIME], [DELETE_FLAG]
            FROM
                [TENVAIR].[T_ENV_AIRDATA_REGION_DAY]
            WHERE
                CODE_REGION = '510100000000'
                AND MONITORTIME >= CONVERT(DATETIME,#{start_time}, 120)
                <![CDATA[ AND MONITORTIME <= CONVERT(DATETIME,#{reportTime}, 120) ]]>
        ) B ON A.REPORT_TIME = B.MONITORTIME
       ORDER BY REPORT_TIME
    </select>

    <!--查询预报数据-->
    <select id="getForecast" resultType="java.util.Map">
        SELECT
            B.[CREATE_TIME],
            A.[RESULT_TIME],
            B.[AQI],
            B.[AQI_LEVEL],
            B.[PRIM_POLLUTE],
            B.[WEATHER_TREND],
            B.[WEATHER_LEVEL],
            B.[INFO_ID],
            B.[CONTROL_TARGET]
        FROM
            (	SELECT CONVERT(DATETIME,#{reportTime}, 120)+1 RESULT_TIME
                UNION	ALL
                SELECT CONVERT(DATETIME,#{reportTime}, 120)+2 RESULT_TIME
                UNION	ALL
                SELECT CONVERT(DATETIME,#{reportTime}, 120)+3 RESULT_TIME
             )A LEFT JOIN (
             SELECT TOP 3 * FROM	T_ANS_FLOW_WQ_ROW WHERE	CREATE_TIME = CONVERT(DATETIME,#{reportTime}, 120) ORDER BY	RESULT_TIME
             ) B 	ON A.RESULT_TIME = B.RESULT_TIME
    </select>

</mapper>